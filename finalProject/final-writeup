1. concrete goals for your project, and methods of testing and verification you will apply to determine whether those goals were met.
	The goal of the project is to setup a LAMP stack with Puppet, which is a very beneficial setup to have in a workspace environment. We will be setting up more Puppet modules on our Puppet master to achieve this. We will be testing and verifying the setup with our Agent instances to ensure that the setup and configuration of these modules are setup properly. As per request, we've implemented a Wordpress environment for a simple web application. This utilizes all components of the LAMP stack, and can be seen at the following URLS: http://ec2-52-10-250-92.us-west-2.compute.amazonaws.com/blog/wordpress/, http://ec2-52-24-248-51.us-west-2.compute.amazonaws.com/blog/wordpress/, and http://ec2-52-27-173-233.us-west-2.compute.amazonaws.com/blog/wordpress/. One thing we wanted to implement, but are strapped for time was to make it so each Wordpress instance read from one database; from the Master. However, with attempts to implment this we couldn't get the other agent instances to read from the master instance. 

2. a discussion of your project's effect on its user population, and the user support issues it might raise.
	The user's will have access to use these LAMP modules on their instances to build, deploy, and catalog data for software and other activities they may be working on. Support issues that may arise will be version control of these modules, and helping the user with issues that may appear when working with these modules. For the most part, the module configurations will help with majority of the basic issues like if somehow them module gets uninstalled, files get deleted, and module goes offline. In addition, there may be some isntances where the user may need more permissions to get a certain task done so then we would need to act accordingly to help them achieve these goals. 

3. a discussion of security issues relevant to your project
	Some security issues could be inputs from invalid users and invalid outputs that would direct users to another site. Any security breach to an instance, especially the Puppet Master, could have issues with file tampering and other various malicious attacks. User groups and file permissions may warrent help against such malicious attacks. There is also an issue with security breaches in PHP and MySQL, to ensure that the basic implementations to help against attacks these modules configurations files can be configured to help against some of these attacks. In addition to that, can setup security groups or work groups that limit access to certain features of these modules to help against breaches, sql injection, and backdoor attempts. Files for basic security implementation for these modules are the security.ini and php.ini for php, my.cnf for mysql, and you can implement .htaccess parameters for web applications. 

4. a discussion of the work needed to complete the project and what might be needed to maintain it for continued future use
	We will need to implement modules for a LAMP stack to complete this project. These modules will consist of MySQL, PHP, and Python; maybe another depending on time. We will need to maintain version control, configuration files, and adding additional features to the modules depending on request from the users. Also, security updates will always need to be on forethought and implemented. Breaches and attacks on these modules are always being found by attackers so constant implementation on hardening security on all these modules will always be a constant feature that needs to be updated. The community is great, and are always helping with ways to keep malicious attacks away. 

5. documentation of the project, both for the system administration work involved and for your user community
	Maintaining the Puppet configuration, the modules, logs of all the inputs and usage, security, and adding more infastructure to Puppet will be the vast majority of the work involved. But there will also be work involved where the User's are asking for help and/or wanting features added to Puppet in order to achieve tasks they cannot do without these specifications. Further updates, implementation, and other miscellaneous are the vast majority the work involved. 


Other Issues/Thoughts:
Ran into some bottlenecks along the way that locked up Puppet and we had to reconfigure Puppet by flushing out all the old certificates and renewing them to get the Puppet agent to work again. In addition to that, setting up the wordpress files in the httpd module gave us some issues when crossing over to the Agents; however, we needed a clean install on repo to fix this. We also ran into an issue with trying to fork the database connection from the master so the agent instances can use the master database for all the wordpress activities, but couldn't resolve this. We tried to use the hostnames and ports to gain access, but nothing seemed to work. So for sake of time, each instance got their down wordpress database, mysql user, and permissions to use that table. 